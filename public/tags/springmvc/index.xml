<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SpringMvc on FAFA Blog</title>
    <link>https://procarihana.github.io/public/tags/springmvc/</link>
    <description>Recent content in SpringMvc on FAFA Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 01 Sep 2020 11:37:47 +0800</lastBuildDate>
    
	<atom:link href="https://procarihana.github.io/public/tags/springmvc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spring</title>
      <link>https://procarihana.github.io/public/notes/spring/</link>
      <pubDate>Tue, 01 Sep 2020 11:37:47 +0800</pubDate>
      
      <guid>https://procarihana.github.io/public/notes/spring/</guid>
      <description>Spring 容器原理  Ioc 容器的事实标准 Ioc (Inverse of Control控制反转) :只需要告诉容器对象的依赖关系，容器就会自动完成依赖和Beans的生成，通过依赖注入完成依赖，整个过程就是控制反转 Java对象是Bean 当A对象必须使用B对象才能完成自己的工作的时候，就是A依赖B  Spring 注解  @RestController （Spring4.0）   继承 @Controller，在SpringMvc当中使用@Controller来标识当前类是一个控制器Servlet。     包含@Target(value=TYPE) @Retention(value=RUNTIME)、@Documented 、@Controller 、@ResponseBody   @RequestMapping，提供路由信息，告诉Spring 任何来自”/“路径的HTTP请求都会被映射到home 方法，@RestController注解告诉Spring 以字符串的形式渲染结果，并直接返回给调用者。    两者都是SpringMvc 的注解，不是SpringBoot特定部分    @EnableAutoConfiguration   告诉SpringBoot 根据添加的Jar 依赖猜测配置Spring。 而Spring-boot-start-web添加了Tomcat 和SpringMvc ，所以auto-configutation 会嘉定你正在开发一个web应用并对Spring 进行设置。     如果有不想自动配置的类可以通过 来禁止使用      @EnableAutoConfiguration(exclude={DataSourceAutoConfiguration.class})    @Configuration   @Configuration注解该类，等价 与XML中配置beans；用@Bean标注方法等价于XML中配置bean   @SpringBootApplication == @Configuration ， @EnableAutoConfiguration 和 @ComponentScan   能够自动在Application 中完成配置   @ResponseBody   表示该方法的返回结果直接写入HTTP response body中     一般在异步获取数据时使用，在使用@RequestMapping后，返回值通常解析为跳转路径，加上 @responsebody后返回结果不会被解析为跳转路径，而是直接写入HTTP response body中。比如 异步获取json数据，加上@responsebody后，会直接返回json数据。   @Resposotory诗句持久层DAO @Component   泛指组件，当组件不好归类的时候，可以使用这个注解进行标注。一般公共的方法会用上这个注解。非Controller、Service、DAO部分的注解   @Service   一般用于修饰service层的组件   @ComponentScan   表示将该类自动发现扫描组件。个人理解相当于，如果扫描到有@Component、@Controller、@Service等这些注解的类，并注册为Bean，可以自动收集所有的Spring组件，包括@Configuration类。我们经常使用@ComponentScan注解搜索beans，并结合@Autowired注解导入。可以自动收集所有的Spring组件，包括@Configuration类。我们经常使用@ComponentScan注解搜索beans，并结合@Autowired注解导入。如果没有配置的话，Spring Boot会扫描启动类所在包下以及子包下的使用了@Service,@Repository等注解的类。   @AutoWired   byType方式。把配置好的Bean拿来用，完成属性、方法的组装，它可以对类成员变量、方法及构 造函数进行标注，完成自动装配的工作。     当加上（required=false）时，就算找不到bean也不报错。   @RequestParam   用在方法的参数前面。   @PathVariable   路径变量。   @ControllerAdvice   包含@Component。可以被扫描到。     统一处理异常。   @ExceptionHandler（Exception.</description>
    </item>
    
  </channel>
</rss>